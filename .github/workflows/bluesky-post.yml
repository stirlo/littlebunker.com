name: Post to Bluesky

on:
  # Run when feeds are updated
  workflow_run:
    workflows: ["Update RSS Feeds"]
    types:
      - completed
  # Also run on schedule
  schedule:
    - cron: '30 * * * *'  # 30 minutes past every hour
  # Manual trigger
  workflow_dispatch:

jobs:
  post-to-bluesky:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install atproto feedparser requests

      - name: Post to Bluesky
        env:
          BLUESKY_HANDLE: ${{ secrets.BLUESKY_HANDLE }}
          BLUESKY_PASSWORD: ${{ secrets.BLUESKY_PASSWORD }}
        run: |
          python - << 'EOF'
          import feedparser
          import os
          import time
          from datetime import datetime, timezone
          from atproto import Client

          # Bluesky credentials
          BLUESKY_HANDLE = os.environ.get('BLUESKY_HANDLE')
          BLUESKY_PASSWORD = os.environ.get('BLUESKY_PASSWORD')

          # Feed URL - will use your GitHub Pages URL until your custom domain is set up
          FEED_URL = "https://stirlo.github.io/littlebunker.com/feed.xml"

          def post_to_bluesky(title, link, description):
              try:
                  # Create Bluesky client
                  client = Client()
                  client.login(BLUESKY_HANDLE, BLUESKY_PASSWORD)

                  # Create post content
                  content = f"{title}\n\n{description[:100]}...\n\n{link}"

                  # Post to Bluesky
                  response = client.send_post(content)
                  print(f"Posted to Bluesky: {title}")
                  return True
              except Exception as e:
                  print(f"Error posting to Bluesky: {e}")
                  return False

          def main():
              # Parse feed
              feed = feedparser.parse(FEED_URL)

              if not feed.entries:
                  print("No entries found in feed")
                  return

              # Get latest entry
              latest_entry = feed.entries[0]

              # Extract info
              title = latest_entry.get('title', 'New post on Little Bunker')
              link = latest_entry.get('link', 'https://littlebunker.com')
              description = latest_entry.get('description', '').replace('<p>', '').replace('</p>', '')

              # Post to Bluesky
              post_to_bluesky(title, link, description)

          if __name__ == "__main__":
              main()
          EOF
